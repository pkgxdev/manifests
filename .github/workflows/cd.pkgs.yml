name: cd·pkgs
run-name: cd·pkgs ${{inputs.pkgs}}

on:
  push:
    branches:
      main
    paths:
      projects/**/build.ts
  workflow_dispatch:
    inputs:
      pkgs:
        required: true

jobs:
  ingest:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.computer.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/plan
        id: computer
        with:
          pkgs: ${{ github.event.inputs.pkgs }}

  bottle:
    needs: ingest
    runs-on: ${{ matrix.platform.os }}
    container: ${{ matrix.platform.container }}
    name: build ${{ matrix.pkg }} ${{ matrix.platform.tinyname }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.ingest.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - name: build
        run: bin/pkg build ${{ matrix.pkg }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: test
        run: bin/pkg test

      - name: bottle
        run: |
          export SSL_CERT_FILE="$HOME/.pkgx/curl.se/ca-certs/v*/ssl/cert.pem"

          mkdir -p "out/$PROJECT"
          mv "$PREFIX" "out/$PROJECT"
          cd out
          find $PROJECT -maxdepth 1 -type l -delete
          pkgx +xz -- tar cJf ../v$VERSION.tar.xz *
          tar czf ../v$VERSION.tar.gz *

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: s3 sync
        run: |
          export SSL_CERT_FILE="$HOME/.pkgx/curl.se/ca-certs/v*/ssl/cert.pem"

          pkgx aws s3 cp v$VERSION.tar.gz s3://dist.tea.xyz/v2/$PROJECT/$DIST_PLATFORM/v$VERSION.tar.gz
          pkgx aws s3 cp v$VERSION.tar.xz s3://dist.tea.xyz/v2/$PROJECT/$DIST_PLATFORM/v$VERSION.tar.xz
          .github/scripts/generate-versions.ts v2/$PROJECT/$DIST_PLATFORM > versions.txt
          pkgx aws s3 cp versions.txt s3://dist.tea.xyz/v2/$PROJECT/$DIST_PLATFORM/versions.txt

      - name: cf invalidate
        run: pkgx aws cloudfront create-invalidation
          --distribution-id EWF6XUK8J11DP
          --paths
          /v2/$PROJECT/$DIST_PLATFORM/versions.txt
          /v2/$PROJECT/$DIST_PLATFORM/v$VERSION.tar.gz
          /v2/$PROJECT/$DIST_PLATFORM/v$VERSION.tar.xz
